{
	"name": "DimAccount",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText14",
						"type": "DatasetReference"
					},
					"name": "CustomerXML"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText9",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "CustomerDB",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimAccount",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "customer"
				}
			],
			"script": "\n\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string,\n\t\tColumn_40 as string,\n\t\tColumn_41 as string,\n\t\tColumn_42 as string,\n\t\tColumn_43 as string,\n\t\tColumn_44 as string,\n\t\tColumn_45 as string,\n\t\tColumn_46 as string,\n\t\tColumn_47 as string,\n\t\tColumn_48 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CustomerXML\nsource(output(\n\t\tBrokerID as string,\n\t\tManagerID as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleInitial as string,\n\t\tBranch as string,\n\t\tOffice as string,\n\t\tPhone as string,\n\t\tSK_BrokerID as string,\n\t\tEffectiveDate as string,\n\t\tIsCurrent as string,\n\t\tBatchID as string,\n\t\tEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource(output(\n\t\tSK_CustomerID as integer,\n\t\tCustomerID as integer,\n\t\tTaxID as string,\n\t\tStatus as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tMiddleInitial as string,\n\t\tGender as string,\n\t\tTier as integer,\n\t\tDOB as date,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPostalCode as string,\n\t\tCity as string,\n\t\tStateProv as string,\n\t\tCountry as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tEmail1 as string,\n\t\tEmail2 as string,\n\t\tNationalTaxRateDesc as string,\n\t\tNationalTaxRate as decimal(6,5),\n\t\tLocalTaxRateDesc as string,\n\t\tLocalTaxRate as decimal(6,5),\n\t\tAgencyID as string,\n\t\tCreditRating as integer,\n\t\tNetWorth as decimal(10,0),\n\t\tMarketingNameplate as string,\n\t\tIsCurrent as boolean,\n\t\tBatchID as integer,\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nCustomerXML derive({TPCDI:Actions} = toString(byName('TPCDI:Actions')),\n\t\t{xmlns:TPCDI} = toString(byName('xmlns:TPCDI')),\n\t\t{TPCDI:Action} = toString(byName('TPCDI:Action')),\n\t\tActionType = toString(byName('ActionType')),\n\t\tActionTS = toString(byName('ActionTS')),\n\t\tCustomer = toString(byName('Customer')),\n\t\tC_ID = toString(byName('C_ID')),\n\t\tC_TAX_ID = toString(byName('C_TAX_ID')),\n\t\tC_GNDR = toString(byName('C_GNDR')),\n\t\tC_TIER = toString(byName('C_TIER')),\n\t\tC_DOB = toString(byName('C_DOB')),\n\t\tName = toString(byName('Name')),\n\t\tC_L_NAME = toString(byName('C_L_NAME')),\n\t\tC_F_NAME = toString(byName('C_F_NAME')),\n\t\tC_M_NAME = toString(byName('C_M_NAME')),\n\t\tAddress = toString(byName('Address')),\n\t\tC_ADLINE1 = toString(byName('C_ADLINE1')),\n\t\tC_ADLINE2 = toString(byName('C_ADLINE2')),\n\t\tC_ZIPCODE = toString(byName('C_ZIPCODE')),\n\t\tC_CITY = toString(byName('C_CITY')),\n\t\tC_STATE_PROV = toString(byName('C_STATE_PROV')),\n\t\tC_CTRY = toString(byName('C_CTRY')),\n\t\tContactInfo = toString(byName('ContactInfo')),\n\t\tC_PRIM_EMAIL = toString(byName('C_PRIM_EMAIL')),\n\t\tC_ALT_EMAIL = toString(byName('C_ALT_EMAIL')),\n\t\tC_PHONE_1 = toString(byName('C_PHONE_1')),\n\t\tC_CTRY_CODE26 = toString(byName('C_CTRY_CODE26')),\n\t\tC_AREA_CODE27 = toString(byName('C_AREA_CODE27')),\n\t\tC_LOCAL28 = toString(byName('C_LOCAL28')),\n\t\tC_EXT29 = toString(byName('C_EXT29')),\n\t\tC_PHONE_2 = toString(byName('C_PHONE_2')),\n\t\tC_CTRY_CODE31 = toString(byName('C_CTRY_CODE31')),\n\t\tC_AREA_CODE32 = toString(byName('C_AREA_CODE32')),\n\t\tC_LOCAL33 = toString(byName('C_LOCAL33')),\n\t\tC_EXT34 = toString(byName('C_EXT34')),\n\t\tC_PHONE_3 = toString(byName('C_PHONE_3')),\n\t\tC_CTRY_CODE36 = toString(byName('C_CTRY_CODE36')),\n\t\tC_AREA_CODE37 = toString(byName('C_AREA_CODE37')),\n\t\tC_LOCAL38 = toString(byName('C_LOCAL38')),\n\t\tC_EXT39 = toString(byName('C_EXT39')),\n\t\tTaxInfo = toString(byName('TaxInfo')),\n\t\tC_LCL_TX_ID = toString(byName('C_LCL_TX_ID')),\n\t\tC_NAT_TX_ID = toString(byName('C_NAT_TX_ID')),\n\t\tAccount = toString(byName('Account')),\n\t\tCA_ID = toString(byName('CA_ID')),\n\t\tCA_TAX_ST = toString(byName('CA_TAX_ST')),\n\t\tCA_B_ID = toString(byName('CA_B_ID')),\n\t\tCA_NAME = toString(byName('CA_NAME'))) ~> MapDrifted1\nMapDrifted1 select(mapColumn(\n\t\tActionType,\n\t\tActionTS,\n\t\tC_ID,\n\t\tAccountID = CA_ID,\n\t\tTaxStatus = CA_TAX_ST,\n\t\tCA_B_ID,\n\t\tAccountDesc = CA_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nSurrogateKey1 derive(Status = iif(ActionType=='CLOSEACCT'||ActionType=='INACT', 'INACTIVE', 'ACTIVE'),\n\t\tEffectiveDate = toDate(substring(toString(ActionTS),1,10), 'yyyy-MM-dd'),\n\t\tEndDate = toDate('9999-12-31','yyyy-MM-dd')) ~> DerivedColumn1\nDerivedColumn1 derive(isCurrent = iif( EndDate== toDate('99991231','yyyyMMdd'), true(), false()),\n\t\tBatchID = 00001) ~> DerivedColumn2\nRemoveColumns1 keyGenerate(output(SK_AccountID as long),\n\tstartAt: 1L) ~> SurrogateKey1\nsource1 select(mapColumn(\n\t\tBrokerID,\n\t\tSK_BrokerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn2, Select1 join(CA_B_ID == BrokerID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tActionType,\n\t\tActionTS,\n\t\tC_ID,\n\t\tAccountID,\n\t\tTaxStatus,\n\t\tCA_B_ID,\n\t\tAccountDesc,\n\t\tSK_AccountID,\n\t\tStatus,\n\t\tEffectiveDate,\n\t\tEndDate,\n\t\tisCurrent,\n\t\tBatchID,\n\t\tSK_BrokerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 sort(asc(C_ID, true),\n\tasc(EffectiveDate, true)) ~> Sort1\nsource2 select(mapColumn(\n\t\tSK_CustomerID,\n\t\tCustomerID,\n\t\tIsCurrent,\n\t\tEffectiveDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> customer\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimAccount'],\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}