{
	"name": "prospect",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "prospect",
						"type": "DatasetReference"
					},
					"name": "Prospect"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "DimDate"
				},
				{
					"dataset": {
						"referenceName": "customeroutput",
						"type": "DatasetReference"
					},
					"name": "customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "prospectdb2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "skdate"
				},
				{
					"name": "prospect"
				},
				{
					"name": "customercolumns",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select2"
				}
			],
			"script": "\n\nsource(output(\n\t\tAgencyID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tMiddleInitial as string,\n\t\tGender as string,\n\t\tAddressLine1 as string,\n\t\t{ AddressLine2} as string,\n\t\tPostalCode as string,\n\t\t{ City} as string,\n\t\tState as string,\n\t\t{ Country} as string,\n\t\tPhone as string,\n\t\t{ Income} as string,\n\t\tNumberCars as string,\n\t\tNumberChildren as string,\n\t\tMaritalStatus as string,\n\t\tAge as string,\n\t\tCreditRating as string,\n\t\tOwnOrRentFlag as string,\n\t\tEmployer as string,\n\t\tNumberCreditCards as string,\n\t\t{NetWorth.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Prospect\nsource(output(\n\t\tSK_DateID as integer,\n\t\tDateValue as date,\n\t\tDateDesc as string,\n\t\tCalendarYearID as decimal(4,0),\n\t\tCalendarYearDesc as string,\n\t\tCalendarQtrID as decimal(5,0),\n\t\tCalendarQtrDesc as string,\n\t\tCalendarMonthID as decimal(6,0),\n\t\tCalendarMonthDesc as string,\n\t\tCalendarWeekID as decimal(6,0),\n\t\tCalendarWeekDesc as string,\n\t\tDayOfWeeknumeric as decimal(1,0),\n\t\tDayOfWeekDesc as string,\n\t\tFiscalYearID as decimal(4,0),\n\t\tFiscalYearDesc as string,\n\t\tFiscalQtrID as decimal(5,0),\n\t\tFiscalQtrDesc as string,\n\t\tHolidayFlag as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimDate\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> customer\nDimDate filter(equals( toDate('2017-07-07', 'yyyy-MM-dd'), DateValue)) ~> Filter1\nFilter1 select(mapColumn(\n\t\tSK_DateID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> skdate\nProspect derive(SK_RecordDateID = 20170707,\n\t\t{SK_UpdateDateID } = 20170707,\n\t\tMarketingNameplate = trim(concat(iif(toInteger({NetWorth.}) > 1000000 || toInteger({ Income}) > 200000 , 'HighValue+',''),\r\niif(toInteger({NumberChildren}) > 3 || toInteger(NumberCreditCards) > 5 , 'Expenses+',''),\r\niif(toInteger({Age}) > 4  , 'Boomer+',''),\r\niif(toInteger({NetWorth.}) < 100000 || toInteger({ Income}) < 50000 || toInteger({CreditRating}) < 600 , 'MoneyAlert+',''),\r\niif(toInteger({NumberCars}) > 3 || toInteger({NumberCreditCards}) > 7 , 'Spender+',''),\r\niif(toInteger({NetWorth.}) > 1000000 || toInteger({Age}) < 25 , 'Inherited+','')), '+'),\n\t\tBatchID = 00001) ~> prospect\ncustomer derive(C_ID = toString(byName('C_ID')),\n\t\ttaxID = toString(byName('taxID')),\n\t\tTier = toString(byName('Tier')),\n\t\tstatus = toString(byName('status')),\n\t\tLastName = toString(byName('LastName')),\n\t\tFirstName = toString(byName('FirstName')),\n\t\tMiddleInitial = toString(byName('MiddleInitial')),\n\t\tGender = toString(byName('Gender')),\n\t\tDOB = toString(byName('DOB')),\n\t\tEmail1 = toString(byName('Email1')),\n\t\tEmail2 = toString(byName('Email2')),\n\t\tAddressLine1 = toString(byName('AddressLine1')),\n\t\tAddressLine2c = toString(byName('AddressLine2')),\n\t\tPostalcode = toString(byName('Postalcode')),\n\t\tCity = toString(byName('City')),\n\t\tStateProv = toString(byName('StateProv')),\n\t\tCountry = toString(byName('Country')),\n\t\tPhone1 = toString(byName('Phone1')),\n\t\tPhone2 = toString(byName('Phone2')),\n\t\tPhone3 = toString(byName('Phone3'))) ~> customercolumns\ncustomercolumns select(mapColumn(\n\t\tC_ID,\n\t\tstatus,\n\t\tLastName,\n\t\tFirstName,\n\t\tAddressLine1,\n\t\tAddressLine2c,\n\t\tPostalcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nprospect, Select1 join(upper(Prospect@FirstName) == upper(Select1@FirstName)\n\t&& upper(Prospect@LastName) == upper(Select1@LastName)\n\t&& upper(Prospect@AddressLine1) == upper(Select1@AddressLine1)\n\t&& upper({ AddressLine2}) == upper(AddressLine2c)\n\t&& upper(Prospect@PostalCode) == upper(Select1@Postalcode),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nJoin1 derive(isCurrent = iif(!isNull(status) && status=='ACTIVE', true(), false())) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tAgencyID,\n\t\tLastName = Prospect@LastName,\n\t\tFirstName = Prospect@FirstName,\n\t\tMiddleInitial,\n\t\tGender,\n\t\tAddressLine1 = Prospect@AddressLine1,\n\t\t{ AddressLine2},\n\t\tPostalCode = Prospect@PostalCode,\n\t\t{ City},\n\t\tState,\n\t\t{ Country},\n\t\tPhone,\n\t\t{ Income},\n\t\tNumberCars,\n\t\tNumberChildren,\n\t\tMaritalStatus,\n\t\tAge,\n\t\tCreditRating,\n\t\tOwnOrRentFlag,\n\t\tEmployer,\n\t\tNumberCreditCards,\n\t\t{NetWorth.},\n\t\tSK_RecordDateID,\n\t\t{SK_UpdateDateID },\n\t\tMarketingNameplate,\n\t\tBatchID,\n\t\tisCurrent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tAgencyID,\n\t\tLastName,\n\t\tFirstName,\n\t\tMiddleInitial,\n\t\tGender,\n\t\tAddressLine1,\n\t\t{ AddressLine2},\n\t\tPostalCode,\n\t\t{ City},\n\t\tState,\n\t\t{ Country},\n\t\tPhone,\n\t\t{ Income},\n\t\tNumberCars,\n\t\tNumberChildren,\n\t\tMaritalStatus,\n\t\tAge,\n\t\tCreditRating,\n\t\tOwnOrRentFlag,\n\t\tEmployer,\n\t\tNumberCreditCards,\n\t\t{NetWorth.},\n\t\tSK_RecordDateID,\n\t\t{SK_UpdateDateID },\n\t\tMarketingNameplate,\n\t\tBatchID,\n\t\tisCurrent\n\t)) ~> sink1"
		}
	}
}