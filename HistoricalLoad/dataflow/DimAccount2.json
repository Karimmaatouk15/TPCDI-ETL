{
	"name": "DimAccount2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText17",
						"type": "DatasetReference"
					},
					"name": "DimAccount2"
				},
				{
					"dataset": {
						"referenceName": "dimbrokertablesql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable15",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "SurrogateKey1"
				}
			],
			"script": "\n\nsource(output(\n\t\tAccountDesc as string,\n\t\tAccountID as string,\n\t\tActionTS as string,\n\t\tActionType as string,\n\t\tBatchID as string,\n\t\tCA_B_ID as string,\n\t\tC_ID as string,\n\t\tEffectiveDate as string,\n\t\tEndDate as string,\n\t\tSK_CustomerID as string,\n\t\tStatus as string,\n\t\tTaxStatus as string,\n\t\tfakesk as string,\n\t\tisCurrent as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> DimAccount2\nsource(output(\n\t\tSK_BrokerID as integer,\n\t\tBrokerID as integer,\n\t\tManagerID as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleInitial as string,\n\t\tBranch as string,\n\t\tOffice as string,\n\t\tPhone as string,\n\t\tIsCurrent as boolean,\n\t\tBatchID as integer,\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nDimAccount2, source1 join(toInteger(CA_B_ID) == BrokerID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tAccountDesc,\n\t\tAccountID,\n\t\tBatchID = DimAccount2@BatchID,\n\t\tEffectiveDate = DimAccount2@EffectiveDate,\n\t\tEndDate = DimAccount2@EndDate,\n\t\tSK_CustomerID,\n\t\tStatus,\n\t\tTaxStatus,\n\t\tisCurrent = DimAccount2@isCurrent,\n\t\tSK_BrokerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 keyGenerate(output(SK_AccountID as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(input(\n\t\tSK_AccountID as integer,\n\t\tAccountID as integer,\n\t\tSK_BrokerID as integer,\n\t\tSK_CustomerID as integer,\n\t\tStatus as string,\n\t\tAccountDesc as string,\n\t\tTaxStatus as integer,\n\t\tIsCurrent as boolean,\n\t\tBatchID as integer,\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSK_AccountID,\n\t\tAccountID,\n\t\tSK_BrokerID,\n\t\tSK_CustomerID,\n\t\tStatus,\n\t\tAccountDesc,\n\t\tTaxStatus,\n\t\tIsCurrent = isCurrent,\n\t\tBatchID,\n\t\tEffectiveDate,\n\t\tEndDate\n\t)) ~> sink1"
		}
	}
}