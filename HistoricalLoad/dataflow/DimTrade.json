{
	"name": "DimTrade",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TradeRAW",
						"type": "DatasetReference"
					},
					"name": "TradeRAW"
				},
				{
					"dataset": {
						"referenceName": "TradeHistoryRAW",
						"type": "DatasetReference"
					},
					"name": "TradeHistoryRAW"
				},
				{
					"dataset": {
						"referenceName": "StatusType",
						"type": "DatasetReference"
					},
					"name": "Statustype"
				},
				{
					"dataset": {
						"referenceName": "TradeType",
						"type": "DatasetReference"
					},
					"name": "TradeType"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable10",
						"type": "DatasetReference"
					},
					"name": "DimSecurity"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable12",
						"type": "DatasetReference"
					},
					"name": "DimAccount"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable13",
						"type": "DatasetReference"
					},
					"name": "DimTime"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable14",
						"type": "DatasetReference"
					},
					"name": "dimDate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimTrade",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Select1"
				},
				{
					"name": "MapDrifted2",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Select2"
				},
				{
					"name": "TradeHistoryOuterJoin"
				},
				{
					"name": "SKDateIDsCols"
				},
				{
					"name": "SKDateIDsCols2"
				},
				{
					"name": "SelectCols"
				},
				{
					"name": "JoinDimSecurity"
				},
				{
					"name": "Select6"
				},
				{
					"name": "AccSelectCols"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DimTimeSelCols"
				},
				{
					"name": "DimDateSelCols"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "FinalColumnSelection"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Join5"
				}
			],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> TradeRAW\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> TradeHistoryRAW\nsource(output(\n\t\tST_ID as string,\n\t\tST_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Statustype\nsource(output(\n\t\tTT_ID as string,\n\t\tTT_NAME as string,\n\t\tTT_IS_SELL as decimal(1,0),\n\t\tTT_IS_MRKT as decimal(1,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TradeType\nsource(output(\n\t\tSK_SecurityID as integer,\n\t\tSymbol as string,\n\t\tIssue as string,\n\t\tStatus as string,\n\t\tName as string,\n\t\tExchangeID as string,\n\t\tSK_CompanyID as integer,\n\t\tSharesOutstanding as integer,\n\t\tFirstTrade as date,\n\t\tFirstTradeOnExchange as date,\n\t\tDividend as decimal(18,0),\n\t\tIsCurrent as boolean,\n\t\tBatchID as decimal(5,0),\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimSecurity\nsource(output(\n\t\tSK_AccountID as integer,\n\t\tAccountID as integer,\n\t\tSK_BrokerID as integer,\n\t\tSK_CustomerID as integer,\n\t\tStatus as string,\n\t\tAccountDesc as string,\n\t\tTaxStatus as integer,\n\t\tIsCurrent as boolean,\n\t\tBatchID as integer,\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimAccount\nsource(output(\n\t\tSK_TimeID as integer,\n\t\tTimeValue as timestamp,\n\t\tHourID as decimal(2,0),\n\t\tHourDesc as string,\n\t\tMinuteID as decimal(2,0),\n\t\tMinuteDesc as string,\n\t\tSecondID as decimal(2,0),\n\t\tSecondDesc as string,\n\t\tMarketHoursFlag as boolean,\n\t\tOfficeHoursFlag as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimTime\nsource(output(\n\t\tSK_DateID as integer,\n\t\tDateValue as date,\n\t\tDateDesc as string,\n\t\tCalendarYearID as decimal(4,0),\n\t\tCalendarYearDesc as string,\n\t\tCalendarQtrID as decimal(5,0),\n\t\tCalendarQtrDesc as string,\n\t\tCalendarMonthID as decimal(6,0),\n\t\tCalendarMonthDesc as string,\n\t\tCalendarWeekID as decimal(6,0),\n\t\tCalendarWeekDesc as string,\n\t\tDayOfWeeknumeric as decimal(1,0),\n\t\tDayOfWeekDesc as string,\n\t\tFiscalYearID as decimal(4,0),\n\t\tFiscalYearDesc as string,\n\t\tFiscalQtrID as decimal(5,0),\n\t\tFiscalQtrDesc as string,\n\t\tHolidayFlag as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> dimDate\nTradeHistoryRAW derive({_col0_} = toString(byName('_col0_')),\n\t\t{_col1_} = toString(byName('_col1_')),\n\t\t{_col2_} = toString(byName('_col2_'))) ~> MapDrifted1\nMapDrifted1 select(mapColumn(\n\t\tTH_T_ID = {_col0_},\n\t\tTH_DTS = {_col1_},\n\t\tTH_ST_ID = {_col2_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nTradeRAW derive({_col0_} = toString(byName('_col0_')),\n\t\t{_col1_} = toString(byName('_col1_')),\n\t\t{_col2_} = toString(byName('_col2_')),\n\t\t{_col3_} = toString(byName('_col3_')),\n\t\t{_col4_} = toString(byName('_col4_')),\n\t\t{_col5_} = toString(byName('_col5_')),\n\t\t{_col6_} = toString(byName('_col6_')),\n\t\t{_col7_} = toString(byName('_col7_')),\n\t\t{_col8_} = toString(byName('_col8_')),\n\t\t{_col9_} = toString(byName('_col9_')),\n\t\t{_col10_} = toString(byName('_col10_')),\n\t\t{_col11_} = toString(byName('_col11_')),\n\t\t{_col12_} = toString(byName('_col12_')),\n\t\t{_col13_} = toString(byName('_col13_'))) ~> MapDrifted2\nMapDrifted2 select(mapColumn(\n\t\tTradeID = {_col0_},\n\t\tT_DTS = {_col1_},\n\t\tT_ST_ID = {_col2_},\n\t\tT_TT_ID = {_col3_},\n\t\tCashFlag = {_col4_},\n\t\tT_S_SYMB = {_col5_},\n\t\tQuantity = {_col6_},\n\t\tBidPrice = {_col7_},\n\t\tT_CA_ID = {_col8_},\n\t\tExecutedBy = {_col9_},\n\t\tTradePrice = {_col10_},\n\t\tFee = {_col11_},\n\t\tCommision = {_col12_},\n\t\tTax = {_col13_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, Select1 join(TradeID == TH_T_ID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> TradeHistoryOuterJoin\nJoin5 derive(SK_CreateDateID = iif((TH_ST_ID=='SBMT'&&(T_TT_ID=='TMB'||T_TT_ID=='TMB'))||TH_ST_ID=='PNDG',toString(DateValue), ''),\n\t\tSK_CreateTimeID = iif((TH_ST_ID=='SBMT'&&(T_TT_ID=='TMB'||T_TT_ID=='TMB'))||TH_ST_ID=='PNDG',substring(toString(TimeValue),12,19), ''),\n\t\tSK_CloseDateID = iif(TH_ST_ID=='CMPT'||TH_ST_ID=='CNCL',toString(DateValue),''),\n\t\tSK_CloseTimeID = iif(TH_ST_ID=='CMPT'||TH_ST_ID=='CNCL',toString(TimeValue),'')) ~> SKDateIDsCols\nSKDateIDsCols derive(SK_CreateDateID = toDate(SK_CreateDateID, 'yyyy-MM-dd'),\n\t\tSK_CreateTimeID = toTimestamp(SK_CreateTimeID,'HH:mm:ss'),\n\t\tSK_CloseDateID = toDate(SK_CloseDateID, 'yyyy-MM-dd'),\n\t\tSK_CloseTimeID = toTimestamp(substring(toString(SK_CloseTimeID), 12,19),'HH:mm:ss'),\n\t\tBatchID = 00001) ~> SKDateIDsCols2\nDimSecurity select(mapColumn(\n\t\tSK_SecurityID,\n\t\tSymbol,\n\t\tSK_CompanyID,\n\t\tIsCurrent,\n\t\tEffectiveDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCols\nSKDateIDsCols2, SelectCols join(T_S_SYMB==Symbol && EffectiveDate<=toDate(TH_DTS) && toDate(TH_DTS)<EndDate,\n\tjoinType:'cross',\n\tbroadcast: 'none')~> JoinDimSecurity\nJoinDimSecurity select(mapColumn(\n\t\tTradeID,\n\t\tT_DTS,\n\t\tCashFlag,\n\t\tT_S_SYMB,\n\t\tQuantity,\n\t\tBidPrice,\n\t\tT_CA_ID,\n\t\tExecutedBy,\n\t\tTradePrice,\n\t\tFee,\n\t\tCommision,\n\t\tTax,\n\t\tTH_T_ID,\n\t\tTH_DTS,\n\t\tTH_ST_ID,\n\t\tSK_TimeID,\n\t\tTimeValue,\n\t\tSK_DateID,\n\t\tDateValue,\n\t\tStatus = ST_NAME,\n\t\tTradeType = TT_NAME,\n\t\tTT_IS_SELL,\n\t\tTT_IS_MRKT,\n\t\tSK_CreateDateID,\n\t\tSK_CreateTimeID,\n\t\tSK_CloseDateID,\n\t\tSK_CloseTimeID,\n\t\tBatchID,\n\t\tSK_SecurityID,\n\t\tSymbol,\n\t\tSK_CompanyID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nDimAccount select(mapColumn(\n\t\tSK_AccountID,\n\t\tAccountID,\n\t\tSK_BrokerID,\n\t\tSK_CustomerID,\n\t\tIsCurrent,\n\t\tEffectiveDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AccSelectCols\nSelect6, AccSelectCols join(AccountID==toInteger(T_CA_ID) && EffectiveDate<=toDate(TH_DTS) && toDate(TH_DTS)<EndDate,\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join1\nDimTime select(mapColumn(\n\t\tSK_TimeID,\n\t\tTimeValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimTimeSelCols\ndimDate select(mapColumn(\n\t\tSK_DateID,\n\t\tDateValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimDateSelCols\nTradeHistoryOuterJoin, DimTimeSelCols join(toTimestamp(substring(toString(TimeValue),12,19),'HH:mm:ss' )==toTimestamp(substring(TH_DTS,12,19),'HH:mm:ss' ),\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join2\nJoin2, DimDateSelCols join(toDate(substring(toString(DateValue),1,10), 'yyyy-MM-dd')==toDate(substring(TH_DTS,1,10), 'yyyy-MM-dd'),\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join3\nJoin1 select(mapColumn(\n\t\tTradeID,\n\t\tSK_BrokerID,\n\t\tSK_CreateDateID,\n\t\tSK_CreateTimeID,\n\t\tSK_CloseDateID,\n\t\tSK_CloseTimeID,\n\t\tStatus,\n\t\tType = TradeType,\n\t\tCashFlag,\n\t\tSK_SecurityID,\n\t\tSK_CompanyID,\n\t\tQuantity,\n\t\tBidPrice,\n\t\tSK_CustomerID,\n\t\tSK_AccountID,\n\t\tExecutedBy,\n\t\tTradePrice,\n\t\tFee,\n\t\tCommision,\n\t\tTax,\n\t\tBatchID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FinalColumnSelection\nFinalColumnSelection sort(asc(TradeID, true),\n\tasc(SK_CreateDateID, true),\n\tasc(SK_CreateTimeID, true)) ~> Sort1\nJoin3, Statustype join(T_ST_ID == ST_ID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join4\nJoin4, TradeType join(T_TT_ID == TT_ID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join5\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimTrade2'],\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}