{
	"name": "Customer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Customer",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "customerinputcode",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "prospectmatchwithcus",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "taxratematch",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "customeroutputcsv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "CustomerFinal",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select3"
				},
				{
					"name": "prospect"
				},
				{
					"name": "Select5"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select6"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select7"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "Join3"
				},
				{
					"name": "Select8"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "Select9"
				},
				{
					"name": "Sort2"
				}
			],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource(output(\n\t\tActionType as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tCustomerID as string,\n\t\tDOB as string,\n\t\tEffectiveDate as string,\n\t\tEmail1 as string,\n\t\tEmail2 as string,\n\t\tEndDate as string,\n\t\tFirstName as string,\n\t\tGender as string,\n\t\tLastName as string,\n\t\tLocalTaxID as string,\n\t\tMiddleInitial as string,\n\t\tNationalTaxID as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tPostalCode as string,\n\t\tStateProv as string,\n\t\tStatus as string,\n\t\tTaxId as string,\n\t\tTier as string,\n\t\tisCurrent as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source2\nsource(output(\n\t\tAgencyID as string,\n\t\tSK_RecordDateID as integer,\n\t\tSK_UpdateDateID as integer,\n\t\tBatchID as decimal(5,0),\n\t\tIsCustomer as boolean,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tMiddleInitial as string,\n\t\tGender as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPostalCode as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tCountry as string,\n\t\tPhone as string,\n\t\tIncome as decimal(9,0),\n\t\tnumericberCars as decimal(2,0),\n\t\tnumericberChildren as decimal(2,0),\n\t\tMaritalStatus as string,\n\t\tAge as decimal(3,0),\n\t\tCreditRating as decimal(4,0),\n\t\tOwnOrRentFlag as string,\n\t\tEmployer as string,\n\t\tnumericberCreditCards as decimal(2,0),\n\t\tNetWorth as decimal(12,0),\n\t\tMarketingNameplate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source3\nsource(output(\n\t\tTX_ID as string,\n\t\tTX_NAME as string,\n\t\tTX_RATE as decimal(6,5)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source4\nsource1 derive({TPCDI:Actions} = toString(byName('TPCDI:Actions')),\n\t\t{xmlns:TPCDI} = toString(byName('xmlns:TPCDI')),\n\t\t{TPCDI:Action} = toString(byName('TPCDI:Action')),\n\t\tActionType = toString(byName('ActionType')),\n\t\tActionTS = toTimestamp(toString(byName('ActionTS')),'yyyy-MM-dd\\'T\\'HH:mm:ss'),\n\t\tCustomer = toString(byName('Customer')),\n\t\tC_ID = toInteger(byName('C_ID')),\n\t\tC_TAX_ID = toString(byName('C_TAX_ID')),\n\t\tC_GNDR = toString(byName('C_GNDR')),\n\t\tC_TIER = toString(byName('C_TIER')),\n\t\tC_DOB = toString(byName('C_DOB')),\n\t\tName = toString(byName('Name')),\n\t\tC_L_NAME = toString(byName('C_L_NAME')),\n\t\tC_F_NAME = toString(byName('C_F_NAME')),\n\t\tC_M_NAME = toString(byName('C_M_NAME')),\n\t\tAddress = toString(byName('Address')),\n\t\tC_ADLINE1 = toString(byName('C_ADLINE1')),\n\t\tC_ADLINE2 = toString(byName('C_ADLINE2')),\n\t\tC_ZIPCODE = toString(byName('C_ZIPCODE')),\n\t\tC_CITY = toString(byName('C_CITY')),\n\t\tC_STATE_PROV = toString(byName('C_STATE_PROV')),\n\t\tC_CTRY = toString(byName('C_CTRY')),\n\t\tContactInfo = toString(byName('ContactInfo')),\n\t\tC_PRIM_EMAIL = toString(byName('C_PRIM_EMAIL')),\n\t\tC_ALT_EMAIL = toString(byName('C_ALT_EMAIL')),\n\t\tC_PHONE_1 = toString(byName('C_PHONE_1')),\n\t\tC_CTRY_CODE26 = toString(byName('C_CTRY_CODE26')),\n\t\tC_AREA_CODE27 = toString(byName('C_AREA_CODE27')),\n\t\tC_LOCAL28 = toString(byName('C_LOCAL28')),\n\t\tC_EXT29 = toString(byName('C_EXT29')),\n\t\tC_PHONE_2 = toString(byName('C_PHONE_2')),\n\t\tC_CTRY_CODE31 = toString(byName('C_CTRY_CODE31')),\n\t\tC_AREA_CODE32 = toString(byName('C_AREA_CODE32')),\n\t\tC_LOCAL33 = toString(byName('C_LOCAL33')),\n\t\tC_EXT34 = toString(byName('C_EXT34')),\n\t\tC_PHONE_3 = toString(byName('C_PHONE_3')),\n\t\tC_CTRY_CODE36 = toString(byName('C_CTRY_CODE36')),\n\t\tC_AREA_CODE37 = toString(byName('C_AREA_CODE37')),\n\t\tC_LOCAL38 = toString(byName('C_LOCAL38')),\n\t\tC_EXT39 = toString(byName('C_EXT39')),\n\t\tTaxInfo = toString(byName('TaxInfo')),\n\t\tC_LCL_TX_ID = toString(byName('C_LCL_TX_ID')),\n\t\tC_NAT_TX_ID = toString(byName('C_NAT_TX_ID')),\n\t\tAccount = toString(byName('Account')),\n\t\tCA_ID = toString(byName('CA_ID')),\n\t\tCA_TAX_ST = toString(byName('CA_TAX_ST')),\n\t\tCA_B_ID = toString(byName('CA_B_ID')),\n\t\tCA_NAME = toString(byName('CA_NAME'))) ~> MapDrifted1\nMapDrifted1 filter(ActionType == 'NEW'||ActionType== 'UPDCUST' || ActionType == 'INACT') ~> Filter1\nSelect3 sort(asc(CustomerID, true),\n\tasc(EffectiveDate, true)) ~> Sort1\nFilter1 select(mapColumn(\n\t\tActionType,\n\t\tActionTS,\n\t\tCustomerID = C_ID,\n\t\tTaxID = C_TAX_ID,\n\t\tC_GNDR,\n\t\tTier = C_TIER,\n\t\tDOB = C_DOB,\n\t\tLastName = C_L_NAME,\n\t\tFirstName = C_F_NAME,\n\t\tMiddleInitial = C_M_NAME,\n\t\tAddressLine1 = C_ADLINE1,\n\t\tAddressLine2 = C_ADLINE2,\n\t\tPostalCode = C_ZIPCODE,\n\t\tCity = C_CITY,\n\t\tStateProv = C_STATE_PROV,\n\t\tCountry = C_CTRY,\n\t\tEmail1 = C_PRIM_EMAIL,\n\t\tEmail2 = C_ALT_EMAIL,\n\t\tC_CTRY_CODE26,\n\t\tC_AREA_CODE27,\n\t\tC_LOCAL28,\n\t\tC_EXT29,\n\t\tC_CTRY_CODE31,\n\t\tC_AREA_CODE32,\n\t\tC_LOCAL33,\n\t\tC_EXT34,\n\t\tC_CTRY_CODE36,\n\t\tC_AREA_CODE37,\n\t\tC_LOCAL38,\n\t\tC_EXT39,\n\t\tC_LCL_TX_ID,\n\t\tC_NAT_TX_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(Phone1 = concat(iif(!isNull(C_CTRY_CODE26)&& !isNull(C_LOCAL28) && !isNull(C_AREA_CODE27),'+'+C_CTRY_CODE26,''),\r\n iif(!isNull(C_AREA_CODE27)&& !isNull(C_LOCAL28),'('+C_AREA_CODE27 +')',''),\r\n iif(!isNull(C_LOCAL28),C_LOCAL28 + C_EXT29,'')),\n\t\tPhone2 = concat(iif(!isNull(C_CTRY_CODE31)&& !isNull(C_LOCAL33) && !isNull(C_AREA_CODE32),'+'+C_CTRY_CODE31,''),\r\n iif(!isNull(C_AREA_CODE32)&& !isNull(C_LOCAL33),'('+C_AREA_CODE32+')',''),\r\n iif(!isNull(C_LOCAL33),C_LOCAL33 + C_EXT34,'')),\n\t\tPhone3 = concat(iif(!isNull(C_CTRY_CODE36)&& !isNull(C_LOCAL38) && !isNull(C_AREA_CODE37),'+'+C_CTRY_CODE36,''),\r\n iif(!isNull(C_AREA_CODE37)&& !isNull(C_LOCAL38),'('+C_AREA_CODE37+')',''),\r\n iif(!isNull(C_LOCAL38),C_LOCAL38 + C_EXT39,'')),\n\t\tStatus = iif(ActionType =='INACT', 'INACTIVE', 'ACTIVE'),\n\t\tGender = iif(upper(C_GNDR)=='M'||upper(C_GNDR)=='F', upper(C_GNDR),'U'),\n\t\tEffectiveDate = toDate(substring(toString(ActionTS),1,10),'yyyy-MM-dd'),\n\t\tEndDate = toDate('9999-12-31', 'yyyy-MM-dd')) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tActionType,\n\t\tCustomerID,\n\t\tTaxID,\n\t\tTier,\n\t\tDOB,\n\t\tLastName,\n\t\tFirstName,\n\t\tMiddleInitial,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tPostalCode,\n\t\tCity,\n\t\tStateProv,\n\t\tCountry,\n\t\tEmail1,\n\t\tEmail2,\n\t\tLocalTaxID = C_LCL_TX_ID,\n\t\tNationalTaxID = C_NAT_TX_ID,\n\t\tPhone1,\n\t\tPhone2,\n\t\tPhone3,\n\t\tStatus,\n\t\tGender,\n\t\tEffectiveDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nsource3 select(mapColumn(\n\t\tAgencyID,\n\t\tLastName,\n\t\tFirstName,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tPostalCode,\n\t\tCreditRating,\n\t\tNetWorth,\n\t\tMarketingNameplate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> prospect\nsource4 select(mapColumn(\n\t\tTX_ID,\n\t\tNationalTaxRateDesc = TX_NAME,\n\t\tNationalTaxRate = TX_RATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nsource2, Select5 join(trim(NationalTaxID) == trim(TX_ID),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nSelect5 select(mapColumn(\n\t\tTX_ID,\n\t\tLocalTaxRateDesc = NationalTaxRateDesc,\n\t\tLocalTaxRate = NationalTaxRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nJoin1, Select6 join(trim(LocalTaxID) == trim(Select6@TX_ID),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join2\nJoin2 select(mapColumn(\n\t\tActionType,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tCountry,\n\t\tCustomerID,\n\t\tDOB,\n\t\tEffectiveDate,\n\t\tEmail1,\n\t\tEmail2,\n\t\tEndDate,\n\t\tFirstName,\n\t\tGender,\n\t\tLastName,\n\t\tLocalTaxID,\n\t\tMiddleInitial,\n\t\tNationalTaxID,\n\t\tPhone1,\n\t\tPhone2,\n\t\tPhone3,\n\t\tPostalCode,\n\t\tStateProv,\n\t\tStatus,\n\t\tTaxId,\n\t\tTier,\n\t\tisCurrent,\n\t\tNationalTaxRateDesc,\n\t\tNationalTaxRate,\n\t\tLocalTaxRateDesc,\n\t\tLocalTaxRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 derive(isCurrent = toBoolean(isCurrent)) ~> ModifyColumns1\nModifyColumns1, prospect join(upper(trim(Select7@FirstName)) == upper(trim(prospect@FirstName))\n\t&& upper(trim(Select7@LastName)) == upper(trim(prospect@LastName))\n\t&& upper(trim(Select7@AddressLine1)) == upper(trim(prospect@AddressLine1))\n\t&& upper(trim(Select7@AddressLine2)) == upper(trim(prospect@AddressLine2))\n\t&& upper(trim(Select7@PostalCode)) == upper(trim(prospect@PostalCode)),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join3\nJoin3 select(mapColumn(\n\t\tActionType,\n\t\tAddressLine1 = {Select7@AddressLine1},\n\t\tAddressLine2 = {Select7@AddressLine2},\n\t\tCity,\n\t\tCountry,\n\t\tCustomerID,\n\t\tDOB,\n\t\tEffectiveDate,\n\t\tEmail1,\n\t\tEmail2,\n\t\tEndDate,\n\t\tFirstName = {Select7@FirstName},\n\t\tGender,\n\t\tLastName = {Select7@LastName},\n\t\tLocalTaxID,\n\t\tMiddleInitial,\n\t\tNationalTaxID,\n\t\tPhone1,\n\t\tPhone2,\n\t\tPhone3,\n\t\tPostalCode = {Select7@PostalCode},\n\t\tStateProv,\n\t\tStatus,\n\t\tTaxId,\n\t\tTier,\n\t\tisCurrent,\n\t\tNationalTaxRateDesc,\n\t\tNationalTaxRate,\n\t\tLocalTaxRateDesc,\n\t\tLocalTaxRate,\n\t\tAgID = AgencyID,\n\t\tCRating = CreditRating,\n\t\tNWorth = NetWorth,\n\t\tMNameplate = MarketingNameplate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nSelect8 derive(Networth = toDouble(iif(isCurrent,toString(NWorth),'')),\n\t\tCreditRating = toInteger(iif(isCurrent,toString(CRating),'')),\n\t\tAgencyID = iif(isCurrent,toString(AgID),''),\n\t\tMarketingNameplate = iif(isCurrent,toString(MNameplate),''),\n\t\tBatchID = 1) ~> DerivedColumn2\nDerivedColumn2 keyGenerate(output(SK_CustomerID as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 select(mapColumn(\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tCountry,\n\t\tCustomerID,\n\t\tDOB,\n\t\tEffectiveDate,\n\t\tEmail1,\n\t\tEmail2,\n\t\tEndDate,\n\t\tFirstName,\n\t\tGender,\n\t\tLastName,\n\t\tMiddleInitial,\n\t\tPhone1,\n\t\tPhone2,\n\t\tPhone3,\n\t\tPostalCode,\n\t\tStateProv,\n\t\tStatus,\n\t\tTaxId,\n\t\tTier,\n\t\tisCurrent,\n\t\tNationalTaxRateDesc,\n\t\tNationalTaxRate,\n\t\tLocalTaxRateDesc,\n\t\tLocalTaxRate,\n\t\tNetworth,\n\t\tCreditRating,\n\t\tAgencyID,\n\t\tMarketingNameplate,\n\t\tBatchID,\n\t\tSK_CustomerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select9\nSelect9 sort(asc(CustomerID, true),\n\tasc(EffectiveDate, true)) ~> Sort2\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['customeroutputcsv'],\n\tpartitionBy('hash', 1)) ~> sink1\nSort2 sink(input(\n\t\tActionType as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tCustomerID as string,\n\t\tDOB as string,\n\t\tEffectiveDate as string,\n\t\tEmail1 as string,\n\t\tEmail2 as string,\n\t\tEndDate as string,\n\t\tFirstName as string,\n\t\tGender as string,\n\t\tLastName as string,\n\t\tLocalTaxID as string,\n\t\tMiddleInitial as string,\n\t\tNationalTaxID as string,\n\t\tPhone1 as string,\n\t\tPhone2 as string,\n\t\tPhone3 as string,\n\t\tPostalCode as string,\n\t\tStateProv as string,\n\t\tStatus as string,\n\t\tTaxId as string,\n\t\tTier as string,\n\t\tisCurrent as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CustomerFinal'],\n\tpartitionBy('hash', 1)) ~> sink2"
		}
	}
}