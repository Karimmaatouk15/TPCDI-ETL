{
	"name": "DimSecurity",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FinwireRAW",
						"type": "DatasetReference"
					},
					"name": "finwireRAW"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "DimCompany"
				},
				{
					"dataset": {
						"referenceName": "StatusJoin",
						"type": "DatasetReference"
					},
					"name": "DimStatus"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Security",
						"type": "DatasetReference"
					},
					"name": "Security"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "SEC"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "SelectCompanyCols"
				},
				{
					"name": "Join1"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "DateConditions"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "Sort2"
				}
			],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> finwireRAW\nsource(output(\n\t\tSK_CompanyID as integer,\n\t\tCompanyID as integer,\n\t\tStatus as string,\n\t\tName as string,\n\t\tIndustry as string,\n\t\tSPrating as string,\n\t\tisLowGrade as boolean,\n\t\tCEO as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tPostalCode as string,\n\t\tCity as string,\n\t\tStateProv as string,\n\t\tCountry as string,\n\t\tDescription as string,\n\t\tFoundingDate as date,\n\t\tIsCurrent as boolean,\n\t\tBatchID as decimal(5,0),\n\t\tEffectiveDate as date,\n\t\tEndDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCompany\nsource(output(\n\t\tST_ID as string,\n\t\tST_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimStatus\nSEC derive({ PTS} = substring(col1,1,15),\n\t\t{ RecType} = substring(col1,16,3),\n\t\t{ Symbol} = substring(col1,19,15),\n\t\t{ IssueType} = substring(col1,34,6),\n\t\tStatus = substring(col1,40,4),\n\t\tName = substring(col1,44,70),\n\t\tExID = substring(col1,114,6),\n\t\tShOut = substring(col1,120,13),\n\t\tFirstTradeDate = substring(col1,133,8),\n\t\tFirstTradeExchg = substring(col1,141,8),\n\t\tDividend = substring(col1,149,12),\n\t\tCoNameOrCIK = substring(col1,161)) ~> DerivedColumn1\nMapDrifted1 filter(equals(substring(col1, 16, 3),'SEC')) ~> SEC\nfinwireRAW derive(col1 = toString(byName('_col0_'))) ~> MapDrifted1\nSort1 select(mapColumn(\n\t\t{CompanyID(CIK)} = CompanyID,\n\t\tSK_CompanyID,\n\t\tCompanyName = Name,\n\t\tEffectiveDateCompany = EffectiveDate,\n\t\tEndDateCompany = EndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCompanyCols\nRemoveColumns1, SelectCompanyCols join(CoNameOrCIK==CompanyName||toInteger(CoNameOrCIK)=={CompanyID(CIK)},\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join1\nDerivedColumn1 select(mapColumn(\n\t\t{ PTS},\n\t\t{ RecType},\n\t\t{ Symbol},\n\t\t{ IssueType},\n\t\tStatus,\n\t\tName,\n\t\tExID,\n\t\tShOut,\n\t\tFirstTradeDate,\n\t\tFirstTradeExchg,\n\t\tDividend,\n\t\tCoNameOrCIK,\n\t\teach(match(name!='col1'&&name!='{_col0_}'))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nJoin1 filter(lesser(toDate(substring({ PTS},1,8), 'yyyyMMdd'),EndDateCompany)&& greaterOrEqual(toDate(substring({ PTS},1,8), 'yyyyMMdd'), EffectiveDateCompany)) ~> DateConditions\nDateConditions, DimStatus join(equals(ST_ID, Status),\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join2\nJoin2 select(mapColumn(\n\t\t{ PTS},\n\t\t{ RecType},\n\t\t{ Symbol},\n\t\t{ IssueType},\n\t\tName,\n\t\tStatus = ST_NAME,\n\t\tExID,\n\t\tShOut,\n\t\tFirstTradeDate,\n\t\tFirstTradeExchg,\n\t\tDividend,\n\t\tCoNameOrCIK,\n\t\t{CompanyID(CIK)},\n\t\tCompanyName,\n\t\tSK_CompanyID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(EffectiveDate = iifNull(toDate(substring({ PTS},1,8),'yyyyMMdd'),toDate('20170707','yyyyMMdd')),\n\t\tEndDate = toDate('99991231','yyyyMMdd'),\n\t\tIsCurrent = true(),\n\t\tBatchID = 00001) ~> DerivedColumn2\nDimCompany sort(asc(CompanyID, true),\n\tasc(EffectiveDate, true)) ~> Sort1\nDerivedColumn2 select(mapColumn(\n\t\t{ Symbol},\n\t\t{ Issue} = { IssueType},\n\t\tName,\n\t\tStatus,\n\t\tExchangeID = ExID,\n\t\tSharesOutstanding = ShOut,\n\t\tFirstTrade = FirstTradeDate,\n\t\tFirstTradeOnExchange = FirstTradeExchg,\n\t\tDividend,\n\t\tSK_CompanyID,\n\t\tEffectiveDate,\n\t\tEndDate,\n\t\tIsCurrent,\n\t\tBatchID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 keyGenerate(output(SK_SecurityID as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sort(asc(SK_CompanyID, true),\n\tasc(EffectiveDate, true)) ~> Sort2\nSort2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimSecuritySorted'],\n\tpartitionBy('hash', 1)) ~> Security"
		}
	}
}