{
	"name": "FactHoldings",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FactHoldings",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable16",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select3"
				}
			],
			"script": "\n\nsource(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource(output(\n\t\tTradeID as integer,\n\t\tSK_BrokerID as integer,\n\t\tSK_CreateDateID as integer,\n\t\tSK_CreateTimeID as integer,\n\t\tSK_CloseDateID as integer,\n\t\tSK_CloseTimeID as integer,\n\t\tStatus as string,\n\t\tDT_Type as string,\n\t\tCashFlag as boolean,\n\t\tSK_SecurityID as integer,\n\t\tSK_CompanyID as integer,\n\t\tQuantity as decimal(6,0),\n\t\tBidPrice as decimal(8,2),\n\t\tSK_CustomerID as integer,\n\t\tSK_AccountID as integer,\n\t\tExecutedBy as string,\n\t\tTradePrice as decimal(8,2),\n\t\tFee as decimal(10,2),\n\t\tCommission as decimal(10,2),\n\t\tTax as decimal(10,2),\n\t\tBatchID as decimal(5,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1 select(mapColumn(\n\t\tHH_H_T_ID = Column_1,\n\t\t{HH_T_ID } = Column_2,\n\t\tHH_BEFORE_QTY = Column_3,\n\t\tHH_AFTER_QTY = Column_4\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource2 select(mapColumn(\n\t\tTradeID,\n\t\tSK_BrokerID,\n\t\tSK_DateID = SK_CloseDateID,\n\t\tSK_TimeID = SK_CloseTimeID,\n\t\tSK_SecurityID,\n\t\tSK_CompanyID,\n\t\tSK_CustomerID,\n\t\tSK_AccountID,\n\t\tBatchID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1, Select2 join(toInteger({HH_T_ID }) == TradeID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tHH_H_T_ID,\n\t\t{HH_T_ID },\n\t\tHH_BEFORE_QTY,\n\t\tHH_AFTER_QTY,\n\t\tTradeID,\n\t\tSK_BrokerID,\n\t\tSK_DateID,\n\t\tSK_TimeID,\n\t\tSK_SecurityID,\n\t\tSK_CompanyID,\n\t\tSK_CustomerID,\n\t\tSK_AccountID,\n\t\tBatchID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3"
		}
	}
}